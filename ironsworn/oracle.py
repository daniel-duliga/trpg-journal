from typing import List
from core import roll;

def _roll(oracle: List[str]):
    return roll.table(oracle)

def action(): return _roll([
    'Scheme',
    'Clash',
    'Weaken',
    'Initiate',
    'Create',
    'Swear',
    'Avenge',
    'Guard',
    'Defeat',
    'Control',
    'Break',
    'Risk',
    'Surrender',
    'Inspect',
    'Raid',
    'Evade',
    'Assault',
    'Deflect',
    'Threaten',
    'Attack',
    'Leave',
    'Preserve',
    'Manipulate',
    'Remove',
    'Eliminate',
    'Withdraw',
    'Abandon',
    'Investigate',
    'Hold',
    'Focus',
    'Uncover',
    'Breach',
    'Aid',
    'Uphold',
    'Falter',
    'Suppress',
    'Hunt',
    'Share',
    'Destroy',
    'Avoid',
    'Reject',
    'Demand',
    'Explore',
    'Bolster',
    'Seize',
    'Mourn',
    'Reveal',
    'Gather',
    'Defy',
    'Transform',
    'Persevere',
    'Serve',
    'Begin',
    'Move',
    'Coordinate',
    'Resist',
    'Await',
    'Impress',
    'Take',
    'Oppose',
    'Capture',
    'Overwhelm',
    'Challenge',
    'Acquire',
    'Protect',
    'Finish',
    'Strengthen',
    'Restore',
    'Advance',
    'Command',
    'Refuse',
    'Find',
    'Deliver',
    'Hide',
    'Fortify',
    'Betray',
    'Secure',
    'Arrive',
    'Affect',
    'Change',
    'Defend',
    'Debate',
    'Support',
    'Follow',
    'Construct',
    'Locate',
    'Endure',
    'Release',
    'Lose',
    'Reduce',
    'Escalate',
    'Distract',
    'Journey',
    'Escort',
    'Learn',
    'Communicate',
    'Depart',
    'Search',
    'Charge',
    'Summon'])

def theme(): return _roll([
    'Risk',
    'Ability',
    'Price',
    'Ally',
    'Battle',
    'Safety',
    'Survival',
    'Weapon',
    'Wound',
    'Shelter',
    'Leader',
    'Fear',
    'Time',
    'Duty',
    'Secret',
    'Innocence',
    'Renown',
    'Direction',
    'Death',
    'Honor',
    'Labor',
    'Solution',
    'Tool',
    'Balance',
    'Love',
    'Barrier',
    'Creation',
    'Decay',
    'Trade',
    'Bond',
    'Hope',
    'Superstition',
    'Peace',
    'Deception',
    'History',
    'World',
    'Vow',
    'Protection',
    'Nature',
    'Opinion',
    'Burden',
    'Vengeance',
    'Opportunity',
    'Faction',
    'Danger',
    'Corruption',
    'Freedom',
    'Debt',
    'Hate',
    'Possession',
    'Stranger',
    'Passage',
    'Land',
    'Creature',
    'Disease',
    'Advantage',
    'Blood',
    'Language',
    'Rumor',
    'Weakness',
    'Greed',
    'Family',
    'Resource',
    'Structure',
    'Dream',
    'Community',
    'War',
    'Portent',
    'Prize',
    'Destiny',
    'Momentum',
    'Power',
    'Memory',
    'Ruin',
    'Mysticism',
    'Rival',
    'Problem',
    'Idea',
    'Revenge',
    'Health',
    'Fellowship',
    'Enemy',
    'Religion',
    'Spirit',
    'Fame',
    'Desolation',
    'Strength',
    'Knowledge',
    'Truth',
    'Quest',
    'Pride',
    'Loss',
    'Law',
    'Path',
    'Warning',
    'Relationship',
    'Wealth',
    'Home',
    'Strategy',
    'Supply'])

def ironlander_names(): return _roll([
    "Solana",
    "Keelan",
    "Cadigan",
    "Sola",
    "Kodroth",
    "Kione",
    "Katja",
    "Tio",
    "Artiga",
    "Eos",
    "Bastien",
    "Elli",
    "Maura",
    "Haleema",
    "Abella",
    "Morter",
    "Wulan",
    "Mai",
    "Farina",
    "Pearce",
    "Wynne",
    "Haf",
    "Aeddon",
    "Khinara",
    "Milla",
    "Nakata",
    "Kynan",
    "Kiah",
    "Jaggar",
    "Beca",
    "Ikram",
    "Melia",
    "Sidan",
    "Deshi",
    "Tessa",
    "Sibila",
    "Morien",
    "Mona",
    "Padma",
    "Avella",
    "Naila",
    "Lio",
    "Cera",
    "Ithela",
    "Zhan",
    "Kaivan",
    "Valeri",
    "Hirsham",
    "Pemba",
    "Edda",
    "Lestara",
    "Lago",
    "Elstan",
    "Saskia",
    "Kabeera",
    "Caldas",
    "Nisus",
    "Serene",
    "Chenda",
    "Themon",
    "Erin",
    "Alban",
    "Parcell",
    "Jelma",
    "Willa",
    "Nadira",
    "Gwen",
    "Amara",
    "Masias",
    "Kanno",
    "Razeena",
    "Mira",
    "Perella",
    "Myrick",
    "Qamar",
    "Kormak",
    "Zura",
    "Zanita",
    "Brynn",
    "Tegan",
    "Pendry",
    "Quinn",
    "Fanir",
    "Glain",
    "Emelyn",
    "Kendi",
    "Althus",
    "Leela",
    "Ishana",
    "Flint",
    "Delkash",
    "Nia",
    "Nan",
    "Keeara",
    "Katania",
    "Morell",
    "Temir",
    "Bas",
    "Sabine",
    "Tallus",]);

def region(): return _roll([
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Barrier Islands",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Ragged Coast",
    "Deep Wilds",
    "Deep Wilds",
    "Deep Wilds",
    "Deep Wilds",
    "Deep Wilds",
    "Deep Wilds",
    "Deep Wilds",
    "Deep Wilds",
    "Deep Wilds",
    "Deep Wilds",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Flooded Lands",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Havens",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Hinterlands",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Tempest Hills",
    "Veiled Mountains",
    "Veiled Mountains",
    "Veiled Mountains",
    "Veiled Mountains",
    "Veiled Mountains",
    "Veiled Mountains",
    "Veiled Mountains",
    "Veiled Mountains",
    "Veiled Mountains",
    "Veiled Mountains",
    "Shattered Wastes",
    "Shattered Wastes",
    "Shattered Wastes",
    "Shattered Wastes",
    "Shattered Wastes",
    "Elsewhere"])

def character_goal(): return _roll([
    "Obtain an object",
    "Obtain an object",
    "Obtain an object",
    "Make an agreement",
    "Make an agreement",
    "Make an agreement",
    "Build a relationship",
    "Build a relationship",
    "Build a relationship",
    "Undermine a relationship",
    "Undermine a relationship",
    "Undermine a relationship",
    "Seek a truth",
    "Seek a truth",
    "Seek a truth",
    "Pay a debt",
    "Pay a debt",
    "Pay a debt",
    "Refute a falsehood",
    "Refute a falsehood",
    "Refute a falsehood",
    "Harm a rival",
    "Harm a rival",
    "Harm a rival",
    "Cure an ill",
    "Cure an ill",
    "Cure an ill",
    "Find a person",
    "Find a person",
    "Find a person",
    "Find a home",
    "Find a home",
    "Find a home",
    "Seize power",
    "Seize power",
    "Seize power",
    "Restore a relationship",
    "Restore a relationship",
    "Restore a relationship",
    "Create an item",
    "Create an item",
    "Create an item",
    "Travel to a place",
    "Travel to a place",
    "Travel to a place",
    "Secure provisions",
    "Secure provisions",
    "Secure provisions",
    "Rebel against power",
    "Rebel against power",
    "Rebel against power",
    "Collect a debt",
    "Collect a debt",
    "Collect a debt",
    "Protect a secret",
    "Protect a secret",
    "Protect a secret",
    "Spread faith",
    "Spread faith",
    "Spread faith",
    "Enrich themselves",
    "Enrich themselves",
    "Enrich themselves",
    "Protect a person",
    "Protect a person",
    "Protect a person",
    "Protect the status quo",
    "Protect the status quo",
    "Protect the status quo",
    "Advance status",
    "Advance status",
    "Advance status",
    "Defend a place",
    "Defend a place",
    "Defend a place",
    "Avenge a wrong",
    "Avenge a wrong",
    "Avenge a wrong",
    "Fulfill a duty",
    "Fulfill a duty",
    "Fulfill a duty",
    "Gain knowledge",
    "Gain knowledge",
    "Gain knowledge",
    "Prove worthiness",
    "Prove worthiness",
    "Prove worthiness",
    "Find redemption",
    "Find redemption",
    "Find redemption",
    "Escape from something",
    "Escape from something",
    "Resolve a dispute",
    "Resolve a dispute",
    "Resolve a dispute",
    "Roll twice",
    "Roll twice",
    "Roll twice",
    "Roll twice",
    "Roll twice",])